version: '3.7'

services:
  installer:
    environment:
      - 'ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}'
      - 'ACCESS_TOKEN_LIFE=${ACCESS_TOKEN_LIFE}'
      - 'REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}'
      - 'REFRESH_TOKEN_LIFE=${REFRESH_TOKEN_LIFE}'
      - 'DB_NAME=${DB_NAME}'
      - 'INSTALLER_USERNAME=${INSTALLER_USERNAME}'
      - 'INSTALLER_PASSWORD=${INSTALLER_PASSWORD}'
      - 'DB_IP=${DB_IP}'
      - 'DB_PORT=${DB_PORT}'
      - 'INSTALLER_AUTH_COLLECTION=${INSTALLER_AUTH_COLLECTION}'
      - 'ACCOUNTS_COLLECTION=${ACCOUNTS_COLLECTION}'
      - 'WAIT_HOSTS=${DB_IP}:${DB_PORT}'
    build:
      context: './'
      dockerfile: './web-installer/Dockerfile'
    image: 'simplyvc/panic_installer:1.0.0'
    volumes:
      - './config:/opt/panic/config'
      - './certificates:/opt/panic/certificates'
    ports:
      - '${INSTALLER_PORT}:8000'
    restart: always
    networks:
      panic_net:
        ipv4_address: '${INSTALLER_IP}'
    depends_on:
      - mongo

  mongo:
    image: 'mongo'
    networks:
      panic_net:
        ipv4_address: '${DB_IP}'
    restart: always
    container_name: 'mongo'
    volumes:
      - 'db-data:/data/db'

  redis:
    image: 'redis'
    networks:
      panic_net:
        ipv4_address: '${REDIS_IP}'
    restart: always
    container_name: 'redis'

  rabbitmq:
    image: 'rabbitmq:3-management'
    networks:
      panic_net:
        ipv4_address: '${RABBIT_IP}'
    restart: always
    container_name: 'rabbitmq'

# TODO: Must also depend on installer finishing
  alerter:
    environment:
      - 'DB_NAME=${DB_NAME}'
      - 'DB_IP=${DB_IP}'
      - 'DB_PORT=${DB_PORT}'
      - 'REDIS_DB=${REDIS_DB}'
      - 'REDIS_IP=${REDIS_IP}'
      - 'REDIS_PORT=${REDIS_PORT}'
      - 'RABBIT_IP=${RABBIT_IP}'
      - 'LOGGING_LEVEL=${LOGGING_LEVEL}'
      - 'SYSTEM_MONITOR_LOG_FILE_TEMPLATE=${SYSTEM_MONITOR_LOG_FILE_TEMPLATE}'
      - 'SYSTEM_MONITOR_PERIOD_SECOND=${SYSTEM_MONITOR_PERIOD_SECONDS}'
      - 'WAIT_HOSTS=${DB_IP}:${DB_PORT}, ${REDIS_IP}:${REDIS_PORT}, ${RABBIT_IP}:${RABBIT_PORT}'
    build: .
    image: 'simplyvc/panic_alerter:1.0.0'
    volumes:
      - './config:/opt/panic/config'
      - './logs:/opt/panic/logs'
    restart: always
    networks:
      panic_net:
        ipv4_address: '${ALERTER_IP}'
    depends_on:
      - mongo
      - redis
      - rabbitmq

networks:
  panic_net:
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/24

volumes:
  db-data: